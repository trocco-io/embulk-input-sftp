plugins {
    id "maven-publish"
    id "java"
    id "signing"
    id "checkstyle"
    id "jacoco"
    id "org.embulk.embulk-plugins" version "0.4.2"
    id "com.palantir.git-version" version "3.0.0"
}

repositories {
    mavenCentral()
}

group = "trocco-io"
version = {
    def vd = versionDetails()
    if (vd.commitDistance == 0 && vd.lastTag ==~ /^v?[0-9]+\.[0-9]+\.[0-9]+([.-][.a-zA-Z0-9-]+)?/) {
        vd.lastTag.replaceFirst(/^v/, "")
    } else {
        "0.0.0.${vd.gitHash}"
    }
}()

description = "Reads files stored on remote server using SFTP."

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
    options.encoding = "UTF-8"
}

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    compileOnly "org.embulk:embulk-api:0.10.31"
    compileOnly "org.embulk:embulk-spi:0.10.31"

    compile("org.embulk:embulk-util-config:0.3.0") {
        // They conflict with embulk-core. They are once excluded here,
        // and added explicitly with versions exactly the same with embulk-core:0.10.31.
        exclude group: "com.fasterxml.jackson.core", module: "jackson-annotations"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-databind"
        exclude group: "com.fasterxml.jackson.datatype", module: "jackson-datatype-jdk8"
        exclude group: "javax.validation", module: "validation-api"
    }

    // They are once excluded from transitive dependencies of other dependencies,
    // and added explicitly with versions exactly the same with embulk-core:0.10.31.
    compile "com.fasterxml.jackson.core:jackson-annotations:2.6.7"
    compile "com.fasterxml.jackson.core:jackson-core:2.6.7"
    compile "com.fasterxml.jackson.core:jackson-databind:2.6.7"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.6.7"
    compile "javax.validation:validation-api:1.1.0.Final"

    compile "org.embulk:embulk-util-file:0.1.3"
    compile "org.embulk:embulk-util-retryhelper:0.8.2"

    compile "org.apache.commons:commons-vfs2:2.2"
    compile "commons-io:commons-io:2.6"
    compile "com.jcraft:jsch:0.1.55"

    testCompile "junit:junit:4.13"
    testCompile "org.embulk:embulk-junit4:0.10.31"
    testCompile "org.embulk:embulk-core:0.10.31"
    testCompile "org.embulk:embulk-core:0.10.31:tests"
    testCompile "org.embulk:embulk-deps:0.10.31"
    testCompile "org.apache.sshd:apache-sshd:1.1.0"
    testCompile "org.littleshoot:littleproxy:1.1.0-beta1"
    testCompile "io.netty:netty-all:4.0.34.Final"

    testCompile "org.embulk:embulk-formatter-csv:0.10.31"
    testCompile "org.embulk:embulk-output-file:0.10.31"
    testCompile "org.embulk:embulk-parser-csv:0.10.31"
}

embulkPlugin {
    mainClass = "org.embulk.input.sftp.SftpFileInputPlugin"
    category = "input"
    type = "sftp"
}

javadoc {
    options {
        locale = "en_US"
        encoding = "UTF-8"
    }
}

jar {
    from rootProject.file("LICENSE")
}

sourcesJar {
    from rootProject.file("LICENSE")
}

javadocJar {
    from rootProject.file("LICENSE")
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = project.name

            from components.java  // Must be "components.java". The dependency modification works only for it.
            // javadocJar and sourcesJar are added by java.withJavadocJar() and java.withSourcesJar() above.
            // See: https://docs.gradle.org/current/javadoc/org/gradle/api/plugins/JavaPluginExtension.html

            pom {  // https://central.sonatype.org/pages/requirements.html
                packaging "jar"

                name = project.name
                description = project.description
                url = "https://www.embulk.org/"

                licenses {
                    license {
                        // http://central.sonatype.org/pages/requirements.html#license-information
                        name = "The Apache License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }

                developers {
                    developer {
                        name = "Satoshi Akama"
                        email = "satoshiakama@gmail.com"
                    }
                    developer {
                        name = "Tai Khuu"
                        email = "khuutantai@gmail.com"
                    }
                    developer {
                        name = "Trung Huynh"
                        email = "httrung90@gmail.com"
                    }
                    developer {
                        name = "Dai MIKURUBE"
                        email = "dmikurube@treasure-data.com"
                    }
                    developer {
                        name = "Viet Nguyen"
                        email = "viet.nguyen@treasure-data.com"
                    }
                    developer {
                        name = "John Luong"
                        email = "jluong@treasure-data.com"
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/embulk/embulk-input-sftp.git"
                    developerConnection = "scm:git:git@github.com:embulk/embulk-input-sftp.git"
                    url = "https://github.com/embulk/embulk-input-sftp"
                }
            }
        }
    }

    repositories {
        maven {  // publishMavenPublicationToMavenCentralRepository
            name = "mavenCentral"
            if (project.version.endsWith("-SNAPSHOT")) {
                url "https://oss.sonatype.org/content/repositories/snapshots"
            } else {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            }

            credentials {
                username = project.hasProperty("ossrhUsername") ? ossrhUsername : ""
                password = project.hasProperty("ossrhPassword") ? ossrhPassword : ""
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}

gem {
    authors = [ "Satoshi Akama" ]
    email = [ "satoshiakama@gmail.com" ]
    summary = "SFTP file input plugin for Embulk"
    homepage = "https://github.com/embulk/embulk-input-sftp"
    licenses = [ "Apache-2.0" ]

    from rootProject.file("LICENSE")
    from rootProject.file("NOTICE_GEM")
    rename ("NOTICE_GEM", "NOTICE")
}

gemPush {
    host = "https://rubygems.org"
}

test {
    testLogging {
        outputs.upToDateWhen { false }
        showStandardStreams = true
    }
}

checkstyle {
    configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    toolVersion = '6.14.1'
}
checkstyleMain {
    configFile = file("${project.rootDir}/config/checkstyle/default.xml")
    ignoreFailures = true
}
checkstyleTest {
    configFile = file("${project.rootDir}/config/checkstyle/default.xml")
    ignoreFailures = true
}
task checkstyle(type: Checkstyle) {
    classpath = sourceSets.main.output + sourceSets.test.output
    source = sourceSets.main.allJava + sourceSets.test.allJava
}
